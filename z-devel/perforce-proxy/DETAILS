           SPELL=perforce-proxy
   VERSION_MAJOR=2004.2
   SHORT_VERSION=04.2
     DOC_VERSION=042
   VERSION_MINOR=73359
         VERSION=$VERSION_MAJOR.$VERSION_MINOR
          SOURCE=p4p
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-$VERSION_MAJOR
   SOURCE_URL[0]=http://www.perforce.com/downloads/perforce/r$SHORT_VERSION/bin.linux24x86/$SOURCE
        WEB_SITE=http://www.perforce.com/
         ENTERED=20050124
         UPDATED=20050409
          MD5[0]=9de1c1ec1e9d013aa67d75d7d481b878
      LICENSE[0]=http://www.perforce.com/perforce/price.html
     GATHER_DOCS=off
  FORCE_DOWNLOAD="on"
          REJECT="is non-source and has licensing issues"
           SHORT="Perforce proxy server"
cat << EOF

Perforce is built to handle distributed development in a wide range of
network topologies. Where bandwidth to remote sites is limited, P4P,
the Perforce Proxy, improves performance by mediating between Perforce
clients and servers to cache frequently transmitted file revisions. By
intercepting requests for cached file revisions, P4P reduces demand on
the Perforce server and network.

To improve performance obtained by multiple Perforce clients accessing a
central Perforce server across a WAN, configure P4P on the side of the
network close to the clients and configure the clients to access P4P,
and then configure P4P to access the central Perforce server. (On a LAN,
you can also obtain performance improvements by setting up proxies to
divert workload from the central server's CPU and disks.)

To install P4P on UNIX, do the following:

   1. Download the p4p executable to the machine on which you wish to
   run the proxy.

   2. Select a directory on this machine (P4PCACHE) in which to cache
   file revisions.

   3. Select a port (P4PORT) on which p4p will listen for requests from
   Perforce client programs.

   4. Select the target Perforce server (P4TARGET) for which this proxy
   will cache.

EOF
